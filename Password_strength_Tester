# A password strength test algorithm
# Import statements come first
import string


# Gather information from the file to a list
def load_dictionary(filename):
    with open(filename, 'r') as file: # Open the file filename in read mode
        words = [word.strip().lower() for word in file]
    return words


def password_strength(password, list_of_common_words):
  #Assesses password strength based on length and character types."""

  strength = 0

  # Check if the length is more than 8
  if len(password) >= 8:
    strength += 1

  # Check for uppercase letters
  if any(char.isupper() for char in password):
    strength += 1

  # Check for lowercase letters
  if any(char.islower() for char in password):
    strength += 1

  # Check for digits
  if any(char.isdigit() for char in password):
    strength += 1

  # Check for special characters
  if any(char in string.punctuation for char in password):
    strength += 1

  # Check if the password is in the list of common words
  if password.lower() in common_words:
    strength -= 2

  # Check if the password is in the list of common words
  first_four = password[:4]
  if first_four.lower() in common_words:
    strength -= 2
 

  if strength <= 0:
    return "Very Weak"
  elif strength == 1:
    return "Weak"
  elif strength == 2:
    return "Medium"
  elif strength == 3:
    return "Strong"
  elif strength == 4:
    return "Very Strong"
  else:
    return "Unbreakable"


if __name__ == '__main__':
    # Collect user Password
    password = input("Enter your password: ")

    # get the common words from the dictionary file
    common_words = load_dictionary('dictionary.txt')

    # check the password strength
    strength = password_strength(password, common_words)
    print("Password strength:", strength)
